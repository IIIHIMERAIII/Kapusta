{"version":3,"file":"static/js/694.c8acb3ef.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Balance/BalanceForm.jsx","components/Container/container.js","components/NavLink/NavLink.styled.jsx","components/Balance/Balance.jsx","components/WalletTabs/styled.js","utils/wordTranslator.js","utils/getParseDate.js","components/TransactionsList/TransactionsListStyle.js","utils/formattingSum.js","components/TransactionsList/TransactionsList.jsx","utils/sortTransactions.js","components/DatePickerComponent/DatePickerComponent.jsx","components/InputTransactionForm/styles/selectStyles.js","components/InputTransactionForm/styles/InputTransactionForm.styled.js","components/InputTransactionForm/InputTransactionForm.jsx","components/Summary/Summary.styled.jsx","components/Summary/Summary.jsx","components/WalletTabs/WalletTabs.jsx","pages/Wallet.styled.js","pages/Wallet.jsx","redux/transactions/transactionsSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BalanceContainer = styled.div`\n  height: 44px;\n\n  position: relative;\n\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  padding-top: 40px;\n  margin: 0 auto;\n\n  background-color: transparent;\n\n  @media screen and (max-width: 768px) {\n    justify-content: space-between;\n  }\n\n  @media screen and (max-width: 480px) {\n    height: auto;\n\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const PortalContainer = styled.div`\n  height: 0;\n  width: 125px;\n\n  padding-left: 68px;\n  padding-right: 141px;\n`;\n\nexport const AbsoluteContainer = styled(BalanceContainer)`\n  box-sizing: border-box;\n\n  top: 144px;\n\n  height: 0;\n  width: 100%;\n\n  position: absolute;\n\n  margin: 0 auto;\n  padding: 0 91px;\n  @media screen and (max-width: 768px) {\n    padding: 0 32px;\n  }\n\n  @media screen and (max-width: 480px) {\n    top: 232px;\n    left: -22px;\n\n    padding: 0 20px;\n  }\n`;\n\nexport const BalanceForm = styled.div`\n  position: absolute;\n\n  left: 50%;\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  transform: translate(-50%, 0);\n\n  @media screen and (max-width: 768px) {\n    position: static;\n\n    transform: translate(0, 0);\n  }\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n\n    margin-top: 40px;\n  }\n`;\n\nexport const BalanceFormNotification = styled(BalanceForm)``;\n\nexport const Text = styled.label`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  margin-right: 20px;\n`;\n\nexport const CurrentBalance = styled.p`\n  box-sizing: border-box;\n\n  position: relative;\n\n  height: 44px;\n  width: 125px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: black;\n  background-color: ${p => p.theme.colors.BgGray};\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  margin-right: 16px;\n\n  @media screen and (max-width: 480px) {\n    width: 140px;\n\n    padding-right: 16px;\n    border-radius: 22px 0px 0px 22px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 74px;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-align: right;\n\n  color: black;\n\n  background-color: transparent;\n\n  border: none;\n\n  outline: none;\n`;\n\nexport const CurrentBalanceContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledBtn = styled.button`\n  box-sizing: border-box;\n\n  height: 44px;\n  width: 125px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: rgba(82, 85, 95, 0.7);\n  background-color: ${p => p.theme.colors.BgGray};\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1), border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n\n    border: none;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 140px;\n\n    border-radius: 0px 22px 22px 0px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n\n  text-decoration: none;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n`;\n\nexport const ReportsSvg = styled.svg`\n  height: 14px;\n  width: 14px;\n\n  margin-left: 20px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const NotificationContainer = styled.div`\n  position: absolute;\n  top: -5px;\n  left: 23%;\n`;\n\nexport const Triangle = styled.div`\n  position: absolute;\n  top: -11px;\n  left: 46.36px;\n\n  height: 12px;\n  width: 26px;\n\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n\n  clip-path: polygon(100% 100%, 0 100%, 50% 0);\n`;\n\nexport const StyledWindow = styled.div`\n  box-sizing: border-box;\n\n  position: relative;\n\n  height: 152px;\n  width: 288px;\n\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n\n  padding: 29px 29.59px;\n  border-radius: 30px;\n  margin-top: 13px;\n\n  opacity: 0;\n\n  transition: opacity 600ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n\n  @media screen and (max-width: 480px) {\n    display: block;\n\n    width: 280px;\n  }\n`;\n\nexport const NotificationText = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  text-align: left;\n\n  color: white;\n\n  margin: 0;\n\n  margin-bottom: 20px;\n`;\n\nexport const NotificationSubText = styled.p`\n  font-size: 12px;\n  line-height: 1.33;\n\n  color: white;\n\n  margin: 0;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  NotificationContainer,\n  StyledWindow,\n  Triangle,\n  NotificationText,\n  NotificationSubText,\n} from './Notification.styled';\n\nexport function Notification({ money = false, }) {\n  const [show, setShow] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    if (!money) {\n      setTimeout(() => {\n        setShow(true);\n        setTimeout(() => setOpacity(1), 0);\n        setTimeout(() => setOpacity(0), 9400);\n        setTimeout(() => setShow(false), 10000);\n      }, 1000);\n    }\n  }, [money]);\n\n  return (\n    <>\n      {show && (\n        <NotificationContainer onClick={() => setShow(false)}>\n          <StyledWindow style={{ opacity }}>\n            <Triangle />\n            <NotificationText>\n              Hello! To get started, enter the current balance of your account!\n            </NotificationText>\n            <NotificationSubText>You can't spend money until you have it :)</NotificationSubText>\n          </StyledWindow>\n        </NotificationContainer>\n      )}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBalance } from 'redux/transactions/transactionsSelectors';\nimport {\n  Text,\n  CurrentBalance,\n  StyledBtn,\n  CurrentBalanceContainer,\n  BalanceForm,\n  Input,\n  BaseContainer,\n  PortalContainer,\n  AbsoluteContainer,\n} from './Balance.styled';\nimport { Notification } from 'components/Notification/Notification';\nimport { Popup } from 'components/Popup/Popup';\nimport { fetchUserBalance } from 'redux/transactions/transactionsOps';\nimport { notifySettings } from '../../utils/notifySettings';\nimport Notiflix from 'notiflix';\n\nexport const formating = data => {\n  const fixedData = data.toFixed(2);\n  if (data < 10) return '0' + fixedData;\n\n  const dividedData = fixedData.split('.');\n\n  const spacedData = Number(dividedData[0]).toLocaleString().split(',').join(' ');\n  return spacedData + '.' + dividedData[1];\n};\n\nexport function BalanceFrom() {\n  const balance = useSelector(selectBalance);\n  const token = useSelector(state => state.auth.accessToken);\n\n  const [popup, setPopup] = useState({\n    isShow: false,\n    title: '',\n    action: null,\n  });\n\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(balance ?? 0);\n\n  const onBlur = evt => {\n    const data = evt.target.value.split(' ').join('');\n    const number = Number(data);\n\n    if(number<1){\n      evt.target.value=formating(value);\n      Notiflix.Notify.warning(\n        `The minimum value is 01.00!`,\n        notifySettings\n      );\n      return;\n    }\n    if (number <= 1000000) {\n      setValue(number);\n      evt.target.value = formating(number);\n    } else {\n      evt.target.value = formating(value);\n    }\n  };\n\n  const onClick = () => {\n    setPopup({\n      isShow: true,\n      title: 'Are you sure?',\n      action: () => dispatch(fetchUserBalance({ value, token })),\n    });\n    document.querySelector('#modal').classList.add('js-action');\n  };\n\n  return (\n    <>\n      <BalanceForm>\n        <Text htmlFor=\"balance\">Balance:</Text>\n        <BaseContainer>\n          <CurrentBalanceContainer>\n            <CurrentBalance>\n              <Input\n                type=\"text\"\n                id=\"balance\"\n                name=\"balance\"\n                defaultValue={formating(value)}\n                onBlur={onBlur}\n                pattern=\"[0-9]\"\n              />\n              uah\n            </CurrentBalance>\n            {createPortal(\n              <AbsoluteContainer>\n                <BalanceForm>\n                  <PortalContainer>\n                    <Notification money={value} />\n                  </PortalContainer>\n                </BalanceForm>\n              </AbsoluteContainer>,\n              document.querySelector('#balance')\n            )}\n          </CurrentBalanceContainer>\n          <StyledBtn type=\"button\" onClick={onClick}>\n            Confirm\n          </StyledBtn>\n        </BaseContainer>\n      </BalanceForm>\n      {popup.isShow && <Popup popup={popup} setPopup={setPopup} />}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport wallet_bg from '../../images/wallet_bg.png';\n\nexport const Main = styled.main`\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (max-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 89px;\n    width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1100px;\n  }\n`;\n\nexport const Bg = styled.div`\n  background-image: url(${wallet_bg});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 116px;\n  min-height: 44px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: ${props => (props.status === 'google' ? '500' : '700')};\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: ${props =>\n    props.status === 'google' ? 'none' : 'uppercase'};\n  color: ${props => (props.status === 'google' ? '#000000' : '#52555f')};\n  background-color: ${p => p.theme.colors.PrimaryGray};\n  padding: 12px 14px;\n  border-radius: ${props => (props.status === 'google' ? '26px' : '16px')};\n  border: none;\n  filter: drop-shadow(1px 3px 5px rgba(82, 85, 95, 0.15));\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n    filter: drop-shadow(1px 3px 5px rgba(255, 107, 8, 0.35));\n  }\n  &:active {\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n    color: white;\n    filter: drop-shadow(1px 3px 5px rgba(255, 107, 8, 0.35));\n  }\n\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n","import { BalanceContainer, StyledLink, ReportsSvg } from './Balance.styled';\nimport svg from '../../images/icons_sprite.svg';\nimport { BalanceFrom } from './BalanceForm';\n\nexport function Balance() { \n  return (\n    <BalanceContainer>\n      <BalanceFrom />\n      <StyledLink to=\"/statistics\">\n        Reports\n        <ReportsSvg>\n          <use href={`${svg}#reports`}></use>\n        </ReportsSvg>\n      </StyledLink>\n    </BalanceContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'components/NavLink/NavLink.styled';\n\nexport const Container = styled.div`\n  margin-top: 8px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n`;\n\nexport const TabLink = styled(Link)`\n  width: 138px;\n  height: 40px;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  box-shadow: none;\n  filter: none;\n`;\n\nexport const Outlet = styled.div`\n  padding: 0px;\n  margin-top: 0px;\n  background-color: white;\n  border-radius: 0px 30px 30px 30px;\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  @media screen and (min-width: 768px) {\n    padding: 24px 40px 42px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 32px 32px 61px 32px;\n  }\n`;\n\nexport const TransactWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const SummaryWrapper = styled.div`\n  display: none;\n  @media screen and (min-width: 1280px) {\n    display: block;\n  }\n`;\n","export const wordTranslator = word => {\n  switch (word) {\n    case 'Январь':\n      return 'January';\n    case 'Февраль':\n      return 'February';\n    case 'Март':\n      return 'March';\n    case 'Апрель':\n      return 'April';\n    case 'Май':\n      return 'May';\n    case 'Июнь':\n      return 'June';\n    case 'Июль':\n      return 'July';\n    case 'Август':\n      return 'August';\n    case 'Сентябрь':\n      return 'September';\n    case 'Октябрь':\n      return 'October';\n    case 'Ноябрь':\n      return 'November';\n    case 'Декабрь':\n      return 'December';\n    case 'З/П':\n      return 'Salary';\n    case 'Доп. доход':\n      return 'Add. Income';\n    case 'Продукты':\n      return 'Products';\n    case 'Алкоголь':\n      return 'Alcohol';\n    case 'Развлечения':\n      return 'Entertainment';\n    case 'Здоровье':\n      return 'Health';\n    case 'Транспорт':\n      return 'Transport';\n    case 'Всё для дома':\n      return 'Housing';\n    case 'Техника':\n      return 'Technique';\n    case 'Коммуналка и связь':\n      return 'Communal, communication';\n    case 'Спорт и хобби':\n      return 'Sports, hobbies';\n    case 'Образование':\n      return 'Education';\n    case 'Прочее':\n      return 'Other';\n    default:\n      return `Please add ${word} to function`;\n  }\n};\n","export const getParseDate = operationDate => {\n  const instance = new Date(Date.parse(operationDate));\n  const day = instance.getDate();\n  const getCurrMonth = () => {\n    const month = instance.getMonth() + 1;\n    if (month < 9) {\n      return `0${month}`;\n    }\n    return month;\n  };\n  const month = getCurrMonth();\n  const year = instance.getFullYear();\n  return `${day}.${month}.${year}`;\n};\n","import styled from 'styled-components';\nimport { theme } from 'components/Theme';\n\nconst stylesTransactionsList = {\n  BoxForList: styled.div`\n    width: 100%;\n    @media screen and (min-width: 768px) {\n    margin-top:80px;\n    }\n    @media screen and (min-width: 1280px) {\n      max-width: 746px;\n    }\n  `,\n\n  ListHeaderItems: styled.div`\n    display: none;\n    align-items: center;\n    border-top-left-radius: 30px;\n    border-top-right-radius: 30px;\n    height: 40px;\n    padding: 0 28px;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.17;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    background-color: ${theme.colors.PrimaryGray};\n    @media screen and (min-width: 768px) {\n      display: flex;\n      padding: 0 20px;\n    }\n    @media screen and (min-width: 768px) {\n      padding: 0 28px;\n    }\n  `,\n\n  DateHeaderStyle: styled.p`\n    margin: 0;\n    width: 85px;\n    margin-right: 25px;\n  `,\n\n  DescriptionHeaderStyle: styled.p`\n    margin: 0;\n    width: 160px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media screen and (min-width: 1280px) {\n      margin-right: 35px;\n    }\n  `,\n\n  CategoryHeaderStyle: styled.p`\n    margin: 0;\n    width: 125px;\n    text-align: center;\n    @media screen and (min-width: 1280px) {\n      width: 115px;\n      margin-right: 50px;\n    }\n  `,\n\n  AmountHeaderStyle: styled.p`\n    margin: 0;\n    width: 125px;\n    text-align: center;\n    margin-right: 20px;\n    @media screen and (min-width: 1280px) {\n      width: 150px;\n      margin-right: 50px;\n    }\n  `,\n\n  List: styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin: 0;\n    padding: 12px 20px 12px;\n    max-height: 168px;\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      width: 7px;\n    }\n    ::-webkit-scrollbar-thumb {\n      background-color: ${theme.colors.PrimaryOrange};\n      border-radius: 2px;\n    }\n    ::-webkit-scrollbar-track {\n      background-color: ${theme.colors.PrimaryGray};\n    }\n    @media screen and (min-width: 768px) {\n      padding: 0px;\n      gap: 0px;\n      max-height: 360px;\n    }\n    @media screen and (min-width: 1280px) {\n      max-height: 400px;\n    }\n  `,\n\n  ListItems: styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    height: 38px;\n    padding: 0 0 8px 0;\n    border-bottom: 2px solid ${theme.colors.PrimaryGray};\n    @media screen and (min-width: 768px) {\n      padding: 0px 24px 0px 20px;\n      border-bottom: 2px solid ${theme.colors.PrimaryGray};\n      border-left: 2px solid ${theme.colors.PrimaryGray};\n      border-right: 2px solid ${theme.colors.PrimaryGray};\n    }\n  `,\n\n  DataWrapper: styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: start;\n    width: 50%;\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      width: auto;\n    }\n  `,\n\n  DescriptionStyleMobileWrapper: styled.div`\n    display: flex;\n    align-items: center;\n    height: 20px;\n    display: block;\n    @media screen and (min-width: 768px) {\n      display: none;\n    }\n  `,\n\n  DescriptionStyleTabletWrapper: styled.div`\n    display: none;\n    @media screen and (min-width: 768px) {\n      display: block;\n    }\n  `,\n\n  DescriptionStyle: styled.p`\n    margin: 0;\n    padding: 0;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.17;\n    letter-spacing: 0.04em;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media screen and (min-width: 768px) {\n      height: auto;\n      width: 170px;\n      font-weight: 400;\n    }\n    @media screen and (min-width: 1280px) {\n      margin-right: 35px;\n    }\n  `,\n\n  DateDescrWrapper: styled.div`\n    display: flex;\n    align-items: center;\n  `,\n\n  DateStyle: styled.p`\n    margin: 0;\n    font-weight: 400;\n    margin-right: 20px;\n    width: 44px;\n    letter-spacing: 0.04em;\n    font-size: 8px;\n    line-height: 9px;\n    @media screen and (min-width: 768px) {\n      width: 84px;\n      font-size: 12px;\n      line-height: 1.17;\n    }\n  `,\n\n  CategoryStyle: styled.p`\n    margin: 0;\n    font-weight: 400;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-align: center;\n    margin: 0;\n    letter-spacing: 0.04em;\n    font-size: 8px;\n    line-height: 9px;\n    @media screen and (min-width: 768px) {\n      width: 125px;\n      font-size: 12px;\n      line-height: 1.17;\n    }\n    @media screen and (min-width: 1280px) {\n      width: 115px;\n      margin-right: 50px;\n    }\n  `,\n\n  AmountWrapper: styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: end;\n    gap: 20px;\n    width: 50%;\n    @media screen and (min-width: 768px) {\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: start;\n      gap: 40px;\n      width: auto;\n    }\n  `,\n\n  AmountStyle: styled.p`\n    margin: 0;\n    letter-spacing: 0.04em;\n    font-size: 12px;\n    line-height: 1.17;\n    white-space: nowrap;\n    color: ${props => (props.type === 'expense' ? 'red' : 'green')};\n    font-weight: 700;\n    text-align: center;\n    @media screen and (min-width: 1280px) {\n      width: 150px;\n    }\n  `,\n\n  BtnForRemove: styled.button`\n    display: block;\n    border: none;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    padding: 0;\n    margin: 0;\n    background-color: ${theme.colors.PrimaryGray};\n  `,\n\n  SvgBoxStyle: styled.svg`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 18px;\n    height: 18px;\n    fill: ${theme.colors.SVGColor};\n    transition: 350ms ease-in-out;\n    &:hover {\n      fill: ${theme.colors.PrimaryOrange};\n      stroke: ${theme.colors.PrimaryOrange};\n      transform: scale(1.2);\n    }\n  `,\n};\n\nexport default stylesTransactionsList;\n","export const formattingSum = data => {\n  const fixedData = data.toFixed(2);\n  if (data < 10) return '0' + fixedData;\n\n  const dividedData = fixedData.split('.');\n\n  const spacedData = Number(dividedData[0])\n    .toLocaleString()\n    .split(',')\n    .join(' ');\n  return spacedData + '.' + dividedData[1];\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchExpenseTransactions,\n  fetchIncomeTransactions,\n  removeTransaction,\n} from 'redux/transactions/transactionsOps';\nimport { selectTransactions } from 'redux/transactions/transactionsSelectors';\nimport { wordTranslator } from 'utils/wordTranslator';\nimport { getParseDate } from 'utils/getParseDate';\nimport stylesTransactionsList from './TransactionsListStyle';\nimport svg from '../../images/icons_sprite.svg';\nimport { formattingSum } from 'utils/formattingSum';\nimport { sortTransactions } from 'utils/sortTransactions';\n\nconst {\n  BoxForList,\n  List,\n  ListItems,\n  BtnForRemove,\n  DateStyle,\n  DescriptionStyle,\n  CategoryStyle,\n  AmountStyle,\n  ListHeaderItems,\n  SvgBoxStyle,\n  CategoryHeaderStyle,\n  AmountHeaderStyle,\n  DescriptionHeaderStyle,\n  DateHeaderStyle,\n  DataWrapper,\n  DateDescrWrapper,\n  DescriptionStyleMobileWrapper,\n  DescriptionStyleTabletWrapper,\n  AmountWrapper,\n} = stylesTransactionsList;\n\nfunction TransactionsList({ type }) {\n  const transactions = useSelector(selectTransactions);\n  const dispatch = useDispatch();\n\n  document.addEventListener('resize', event => {\n    console.log('event :>> ', event);\n  });\n  useEffect(() => {\n    if (type === 'expense') {\n      dispatch(fetchExpenseTransactions());\n      return;\n    }\n    if (type === 'income') {\n      dispatch(fetchIncomeTransactions());\n      return;\n    }\n  }, [dispatch, type]);\n\n  return (\n    <>\n      <BoxForList>\n        <ListHeaderItems>\n          <DateHeaderStyle>Date</DateHeaderStyle>\n          <DescriptionHeaderStyle>Description</DescriptionHeaderStyle>\n          <CategoryHeaderStyle>Category</CategoryHeaderStyle>\n          <AmountHeaderStyle>Sum</AmountHeaderStyle>\n        </ListHeaderItems>\n        <List>\n          {transactions[type].length !== 0 &&\n            sortTransactions(transactions[type]).map(operation => {\n              return (\n                <ListItems key={operation._id}>\n                  <DataWrapper>\n                    <DescriptionStyleMobileWrapper>\n                      <DescriptionStyle>\n                        {operation.description.split(' ').slice(0, 2).join(' ')}\n                      </DescriptionStyle>\n                    </DescriptionStyleMobileWrapper>\n                    <DateDescrWrapper>\n                      <DateStyle>{getParseDate(operation.date)}</DateStyle>\n                      <DescriptionStyleTabletWrapper>\n                        <DescriptionStyle>\n                          {operation.description}\n                        </DescriptionStyle>\n                      </DescriptionStyleTabletWrapper>\n                      <CategoryStyle>\n                        {wordTranslator(operation.category)}\n                      </CategoryStyle>\n                    </DateDescrWrapper>\n                  </DataWrapper>\n                  <AmountWrapper>\n                    <AmountStyle type={type}>\n                      {type === 'expense' && '-'}{' '}\n                      {formattingSum(operation.amount)} UAH.\n                    </AmountStyle>\n                    <BtnForRemove\n                      type=\"button\"\n                      onClick={() => {\n                        dispatch(\n                          removeTransaction({ id: operation._id, type })\n                        );\n                      }}\n                    >\n                      <SvgBoxStyle>\n                        <use href={`${svg}#delete`} />\n                      </SvgBoxStyle>{' '}\n                    </BtnForRemove>\n                  </AmountWrapper>\n                </ListItems>\n              );\n            })}\n        </List>\n      </BoxForList>\n    </>\n  );\n}\n\nexport default TransactionsList;\n","export const sortTransactions = array => {\n  const sortedArray = [...array].sort((a, b) => {\n    return Date.parse(b.date) - Date.parse(a.date);\n  });\n  return sortedArray;\n};\n","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './DatePickerComponent.css';\nimport sprite from 'images/icons_sprite.svg';\n\nexport function DatePickerComponent({ date, maxDate, handler }) {\n  return (\n    <label className=\"label\">\n      <svg className=\"iconCalendar\" width=\"20\" height=\"20\">\n        <use href={sprite + `#calendar`} />\n      </svg>\n      <ReactDatePicker\n        className=\"date\"\n        name=\"date\"\n        dateFormat=\"dd.MM.yyyy\"\n        selected={date}\n        maxDate={maxDate}\n        onChange={handler}\n      />\n    </label>\n  );\n}\n","export const selectStyles = {\n  control: () => ({\n    zIndex: '1000',\n    boxSizing: 'border-box',\n    width: '168px',\n    height: '40px',\n    backgroundColor: '#ffffff',\n    color: '#C7CCDC',\n    fontSize: '12px',\n    boxShadow: 'none',\n    fontWeight: '400',\n    fontFamily: \"Roboto,'Open Sans','Helvetica Neue', sans-serif\",\n    lineHeight: '1.15',\n    letterSpacing: '0.02em',\n    display: 'flex',\n    alignItems: 'center',\n    borderLeft: '2px solid #F5F6FB',\n    borderRight: '2px solid #F5F6FB',\n    borderTop: 'none',\n    borderBottom: 'none',\n    paddingLeft: '20px',\n  }),\n  input: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  placeholder: styles => ({\n        ...styles,\n        color: '#C7CCDC',\n    }),\n  menu: () => ({\n    boxSizing: 'border-box',\n    position: 'absolute',\n    width: '168px',\n    backgroundColor: '#ffffff',\n    zIndex: '200',\n    border: '2px solid #F5F6FB',\n    boxShadow: '0px 3px 4px rgba(170, 178, 197, 0.4)',\n  }),\n  valueContainer: styles => ({\n    ...styles,\n    padding: '0',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  indicatorSeparator: () => ({\n    // ...styles,\n    display: 'none',\n  }),\n  dropdownIndicator: (styles, { isFocused, isSelected }) => ({\n    ...styles,\n    color: isFocused ? '#52555F' : '#C7CCDC',\n    transform: isFocused ? 'rotate(180deg)' : null,\n  }),\n  option: (_, { isDisabled, isFocused }) => {\n    return {\n      height: '32px',\n      paddingLeft: '20px',\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '12px',\n      boxShadow: 'none',\n      fontWeight: '400',\n      fontFamily: \"Roboto,'Open Sans','Helvetica Neue', sans-serif\",\n      lineHeight: '1.15',\n      letterSpacing: '0.02em',\n      color: isFocused ? '#52555F' : '#C7CCDC',\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      backgroundColor: isFocused ? '#F5F6FB' : '#ffffff',\n    };\n  },\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  box-sizing: border-box;\n  min-width: 280px;\n\n  display: flex;\n  flex-wrap: wrap;\n\n  background-color: #f5f6fb;\n  border-bottom-left-radius: 64px;\n\n  /* position: relative;\n  z-index: 1; */\n\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    width: 624px;\n\n    margin-bottom: 48px;\n\n    background-color: white;\n    border-bottom-left-radius: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-wrap: nowrap;\n    min-width: 1034px;\n    height: 44px;\n\n    margin-bottom: 60px;\n\n    background-color: #ffffff;\n    border-bottom-left-radius: 0;\n  }\n`;\n\nexport const InputForm = styled.form`\n  box-sizing: border-box;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  min-width: 280px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    width: 624px;\n    min-width: 624px;\n    height: 44px;\n\n    row-gap: 34px;\n    column-gap: 34px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: inline-flex;\n    flex-wrap: nowrap;\n    column-gap: 32px;\n\n    min-width: 1034px;\n    width: 1034px;\n\n    margin-bottom: 0;\n  }\n`;\n\nexport const InputGroupWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    display: flex;\n    flex-wrap: nowrap;\n\n    height: 44px;\n    width: 478px;\n\n    border: 2px solid #f6f7fc;\n    border-radius: 16px 16px 16px 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-wrap: nowrap;\n\n    width: 578px;\n    height: 44px;\n\n    border: 2px solid #f6f7fc;\n    border-radius: 16px 16px 16px 0;\n  }\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n\n  height: 44px;\n\n  background-color: #f5f6fb;\n  border: 2px solid #ffffff;\n\n  font-family: inherit;\n  font-size: 12px;\n  outline: none;\n\n  ::placeholder {\n    font-family: inherit;\n    font-size: 12px;\n    font-weight: 400;\n    color: #c7ccdc;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    height: 40px;\n    border: none;\n\n    background-color: #ffffff;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 40px;\n    border: none;\n\n    background-color: #ffffff;\n  }\n`;\n\nexport const InputProduct = styled(Input)`\n  width: 280px;\n\n  font-family: inherit;\n  font-size: 12px;\n\n  padding-left: 20px;\n\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    width: 200px;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 0px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 290px;\n\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n  }\n`;\n\nexport const InputAmountWrapper = styled.div`\n  position: relative;\n\n  @media screen and (max-width: 767.9px) {\n    display: flex;\n    position: relative;\n\n    margin-top: 34px;\n    margin-bottom: 32px;\n    margin-left: auto;\n    margin-right: auto;\n\n    width: 183px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    display: flex;\n    position: relative;\n  }\n`;\n\nexport const InputAmount = styled(Input)`\n  width: 100%;\n  text-align: right;\n  padding-right: 42px;\n\n  border-radius: 16px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279.5px) {\n    flex-shrink: 0;\n    width: 110px;\n\n    border-radius: 0 16px 16px 0;\n    //   overflow: hidden;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 120px;\n    border-radius: 0 16px 16px 0;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: inline-flex;\n  column-gap: 16px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//import 'react-datepicker/dist/react-datepicker.css';\nimport './styles/InputTransactionForm.css';\nimport Select from 'react-select';\nimport sprite from 'images/icons_sprite.svg';\nimport { Btn } from 'components/Buttons/Btn';\nimport { API_TRANSACTION } from '../../api/apiTransactionCategories';\nimport {\n  addTransactionOp,\n  fetchCategoriesOp,\n} from 'redux/transactions/transactionsOps';\nimport { DatePickerComponent } from 'components/DatePickerComponent/DatePickerComponent';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from '../../utils/notifySettings';\n\nimport {\n  selectisLoadingOptions,\n  selectTransactionsOptions,\n  selectTransactionsOptionsLength,\n} from 'redux/transactions/transactionsSelectors';\nimport { selectStyles } from './styles/selectStyles';\nimport {\n  ButtonsWrapper,\n  InputAmount,\n  InputAmountWrapper,\n  InputForm,\n  InputGroupWrapper,\n  InputProduct,\n  MainContainer,\n} from './styles/InputTransactionForm.styled';\n\nexport default function InputTransactionForm({ type }) {\n  const TRANSACTION_FORM_DATA = {\n    expense: {\n      description: 'Product description',\n      selectCategoryPlaceholder: 'Product category',\n    },\n    income: {\n      description: 'Income description',\n      selectCategoryPlaceholder: 'Income category',\n    },\n  };\n\n  const today = new Date();\n  const initialFormData = {\n    product: '',\n    sum: '',\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const [date, setDate] = useState(today);\n  const [category, setCategory] = useState(null);\n\n  const dispatch = useDispatch();\n  const transactionsOptions = useSelector(selectTransactionsOptions);\n  const transactionsOptionsLength = useSelector(\n    selectTransactionsOptionsLength\n  );\n  const isLoadingOpts = useSelector(selectisLoadingOptions);\n\n  useEffect(() => {\n    if (transactionsOptionsLength || isLoadingOpts) return;\n\n    dispatch(fetchCategoriesOp(type));\n    // eslint-disable-next-line\n  }, [type]);\n\n  const onClearForm = () => {\n    setDate(today);\n    setFormData(initialFormData);\n    setCategory(null);\n  };\n\n  const isFormValid = (product, category, sum) => {\n    let isValid = true;\n    if (!product) {\n      Notiflix.Notify.warning(\n        'You should enter transaction description',\n        notifySettings\n      );\n      isValid = false;\n    }\n    if (!category) {\n      Notiflix.Notify.warning(\n        'You should choose transaction category',\n        notifySettings\n      );\n      isValid = false;\n    }\n    if (sum === '' || parseFloat(sum) < 0.01) {\n      Notiflix.Notify.warning(\n        'You should enter transaction amount',\n        notifySettings\n      );\n      isValid = false;\n    }\n    return isValid;\n  };\n\n  const onFormSubmit = () => {\n    if (!isFormValid(formData.product, category, formData.sum)) return null;\n    const transaction = {\n      description: formData.product,\n      amount: parseFloat(formData.sum),\n      date: date.toISOString().split('T')[0],\n      category: Object.keys(API_TRANSACTION[type].apiCategories)[\n        category.value\n      ],\n    };\n    dispatch(addTransactionOp({ type, transaction }));\n    onClearForm();\n  };\n\n  const validateSumInput = value => {\n    if (value === '') {\n      setFormData(oldData => {\n        return { ...oldData, sum: '' };\n      });\n      return null;\n    }\n\n    let num = parseFloat(value);\n\n    if (isNaN(num)) num = formData.sum;\n\n    setFormData(oldData => {\n      return { ...oldData, sum: num };\n    });\n  };\n\n  return (\n    <MainContainer>\n      <InputForm>\n        <DatePickerComponent\n          name=\"date\"\n          date={date}\n          maxDate={today}\n          handler={date => setDate(date)}\n        />\n        <InputGroupWrapper>\n          <InputProduct\n            type=\"text\"\n            value={formData.product}\n            name=\"product\"\n            placeholder={TRANSACTION_FORM_DATA[type].description}\n            onChange={e =>\n              setFormData(oldData => {\n                return { ...oldData, product: e.target.value };\n              })\n            }\n          />\n          <Select\n            key={type}\n            defaultOptions\n            placeholder={TRANSACTION_FORM_DATA[type].selectCategoryPlaceholder}\n            styles={selectStyles}\n            options={transactionsOptions[type] ?? []}\n            isLoading={isLoadingOpts}\n            closeMenuOnSelect={true}\n            onChange={selectedOption => setCategory(selectedOption)}\n            value={category}\n          />\n          <InputAmountWrapper>\n            <InputAmount\n              type=\"text\"\n              value={formData.sum}\n              name=\"product\"\n              placeholder=\"0.00\"\n              onChange={e => validateSumInput(e.target.value)}\n            />\n            <svg\n              className=\"input-product-form--calc-svg\"\n              width=\"20\"\n              height=\"20\"\n            >\n              <use href={sprite + `#calculator`}></use>\n            </svg>\n          </InputAmountWrapper>\n        </InputGroupWrapper>\n        <ButtonsWrapper>\n          <Btn text=\"INPUT\" onClick={onFormSubmit} />\n          <Btn text=\"CLEAR\" onClick={onClearForm} />\n        </ButtonsWrapper>\n      </InputForm>\n    </MainContainer>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SummaryList = styled.ul`\n  padding: 0;\n  margin: 0;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  overflow: hidden;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  width: 213px;\n  margin-top: 80px;\n`;\n\nexport const SummaryTitle = styled.li`\n  height: 38px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n  margin-bottom: 2px;\n  background-color: ${p => p.theme.colors.PrimaryGray};\n`;\n\nexport const SummaryItems = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 12px;\n  height: 38px;\n  background-color: ${p => p.theme.colors.PrimaryGray};\n  &:last-child {\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const SummaryText = styled.p`\n  text-transform: uppercase;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectTransactions } from 'redux/transactions/transactionsSelectors';\nimport { formattingSum } from 'utils/formattingSum';\nimport { wordTranslator } from 'utils/wordTranslator';\nimport {\n  SummaryItems,\n  SummaryList,\n  SummaryText,\n  SummaryTitle,\n} from './Summary.styled';\n\nfunction Summary() {\n  const transactions = useSelector(selectTransactions);\n\n  return (\n    <SummaryList>\n      <SummaryTitle>Summary</SummaryTitle>\n      {transactions?.monthsStats &&\n        Object.entries(transactions.monthsStats)\n          .filter(operation => typeof operation[1] === 'number')\n          .map(operation => {\n            return (\n              <SummaryItems key={wordTranslator(operation[0])}>\n                <SummaryText>{wordTranslator(operation[0])}</SummaryText>\n                <SummaryText>{formattingSum(operation[1])}</SummaryText>\n              </SummaryItems>\n            );\n          })}\n    </SummaryList>\n  );\n}\n\nexport default Summary;\n","import { useState } from 'react';\nimport {\n  Container,\n  Box,\n  TabLink,\n  Outlet,\n  TransactWrapper,\n  SummaryWrapper,\n} from './styled';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport InputTransactionForm from 'components/InputTransactionForm/InputTransactionForm';\nimport Summary from 'components/Summary/Summary';\n\nexport const Tabs = () => {\n  const [activeTab, setActiveTab] = useState('tab1');\n  const handleTab1 = () => {\n    setActiveTab('tab1');\n  };\n  const handleTab2 = () => {\n    setActiveTab('tab2');\n  };\n  return (\n    <Container>\n      <Box>\n        <TabLink\n          className={activeTab === 'tab1' ? 'active' : ''}\n          onClick={handleTab1}\n        >\n          Expenses\n        </TabLink>\n        <TabLink\n          className={activeTab === 'tab2' ? 'active' : ''}\n          onClick={handleTab2}\n        >\n          income\n        </TabLink>\n      </Box>\n\n      <Outlet>\n        {activeTab === 'tab1' ? (\n          <>\n            <InputTransactionForm type=\"expense\" />\n            <TransactWrapper>\n              <TransactionsList type=\"expense\" />\n              <SummaryWrapper>\n                <Summary />\n              </SummaryWrapper>\n            </TransactWrapper>\n          </>\n        ) : (\n          <>\n            <InputTransactionForm type=\"income\" />\n            <TransactWrapper>\n              <TransactionsList type=\"income\" />\n              <Summary />\n            </TransactWrapper>\n          </>\n        )}\n      </Outlet>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SummaryWrapper = styled.div`\n  margin-top: 40px;\n  display: none;\n  @media screen and (min-width: 768px) {\n    display: block;\n  }\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n","import { Balance } from 'components/Balance/Balance';\nimport { Tabs } from 'components/WalletTabs/WalletTabs';\nimport { Main, Bg } from 'components/Container/container';\nimport Summary from 'components/Summary/Summary';\nimport { SummaryWrapper } from './Wallet.styled';\nconst WalletPage = () => {\n  return (\n    <Bg>\n      <Main>\n        <Balance />\n        <Tabs />\n        <SummaryWrapper>\n          <Summary />\n        </SummaryWrapper>\n      </Main>\n    </Bg>\n  );\n};\n\nexport default WalletPage;\n","export const selectBalance = state => state.transactions.balance;\n\nexport const selectTransactions = state => state.transactions.transactions;\nexport const selectTransactionsOptions = state =>\n  state.transactions.transactionsOptions;\nexport const selectisLoadingOptions = state =>\n  state.transactions.transactionsOptions.isLoading;\nexport const selectTransactionsOptionsLength = state =>\n  selectTransactionsOptions(state).length;\n"],"names":["BalanceContainer","styled","PortalContainer","AbsoluteContainer","BalanceForm","Text","CurrentBalance","p","theme","colors","BgGray","Input","CurrentBalanceContainer","StyledBtn","PrimaryOrange","StyledLink","NavLink","ReportsSvg","BaseContainer","NotificationContainer","Triangle","StyledWindow","NotificationText","NotificationSubText","Notification","money","useState","show","setShow","opacity","setOpacity","useEffect","setTimeout","onClick","style","formating","data","fixedData","toFixed","dividedData","split","Number","toLocaleString","join","BalanceFrom","balance","useSelector","selectBalance","token","state","auth","accessToken","isShow","title","action","popup","setPopup","dispatch","useDispatch","value","setValue","htmlFor","type","id","name","defaultValue","onBlur","evt","target","number","Notiflix","notifySettings","pattern","createPortal","document","querySelector","fetchUserBalance","classList","add","Popup","Main","Bg","wallet_bg","Link","props","status","PrimaryGray","Balance","to","href","svg","Container","Box","TabLink","Outlet","TransactWrapper","SummaryWrapper","wordTranslator","word","getParseDate","operationDate","instance","Date","parse","day","getDate","month","getMonth","getCurrMonth","year","getFullYear","BoxForList","ListHeaderItems","DateHeaderStyle","DescriptionHeaderStyle","CategoryHeaderStyle","AmountHeaderStyle","List","ListItems","DataWrapper","DescriptionStyleMobileWrapper","DescriptionStyleTabletWrapper","DescriptionStyle","DateDescrWrapper","DateStyle","CategoryStyle","AmountWrapper","AmountStyle","BtnForRemove","SvgBoxStyle","formattingSum","stylesTransactionsList","array","transactions","selectTransactions","addEventListener","event","console","log","fetchIncomeTransactions","fetchExpenseTransactions","length","sort","a","b","date","map","operation","description","slice","category","amount","removeTransaction","_id","DatePickerComponent","maxDate","handler","className","width","height","sprite","dateFormat","selected","onChange","selectStyles","control","zIndex","boxSizing","backgroundColor","color","fontSize","boxShadow","fontWeight","fontFamily","lineHeight","letterSpacing","display","alignItems","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","input","styles","placeholder","menu","position","border","valueContainer","padding","singleValue","indicatorSeparator","dropdownIndicator","isFocused","isSelected","transform","option","_","isDisabled","cursor","MainContainer","InputForm","InputGroupWrapper","InputProduct","InputAmountWrapper","InputAmount","ButtonsWrapper","InputTransactionForm","TRANSACTION_FORM_DATA","expense","selectCategoryPlaceholder","income","today","initialFormData","product","sum","formData","setFormData","setDate","setCategory","transactionsOptions","selectTransactionsOptions","transactionsOptionsLength","selectTransactionsOptionsLength","isLoadingOpts","selectisLoadingOptions","fetchCategoriesOp","onClearForm","e","oldData","defaultOptions","options","isLoading","closeMenuOnSelect","selectedOption","num","parseFloat","isNaN","validateSumInput","Btn","text","isValid","isFormValid","transaction","toISOString","Object","keys","API_TRANSACTION","apiCategories","addTransactionOp","SummaryList","SummaryTitle","SummaryItems","SummaryText","monthsStats","entries","filter","Tabs","activeTab","setActiveTab"],"sourceRoot":""}